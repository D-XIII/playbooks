---
- name: Kubernetes Cluster Setup
  hosts: all
  become: yes
  tasks:
    - name: Update and install dependencies
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'socat']
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable

        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

        update_cache: yes

    - name: Ensure Docker is started and enabled
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Create keyrings directory
      file: 
        path: /etc/apt/keyrings
        state: directory

    - name: Check if k8s key already exists
      stat:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      register: k8skey

    - name: Add k8s key 
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg # allow unprivileged APT programs to read this keyring
      when: not k8skey.stat.exists

    - name: add k8s repository
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /

    - name: Install Kubernetes components
      apt:
        name: ['kubelet', 'kubeadm', 'kubectl']
        state: present

        update_cache: yes

    - name: Hold kubelet, kubeadm, and kubectl at current version
      apt:
        name: ['kubelet', 'kubeadm', 'kubectl']
        state: present

    - name: Ensure swap is off
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Disable swap in fstab

      replace:
        path: /etc/fstab
        regexp: '(^/swap.img)'
        replace: '#\1'

- name: Initialize Kubernetes Control Plane (Master Node)
  hosts: all 
  become: yes
  tasks:
    
    - name: Initialize Kubernetes Master with kubeadm
      shell: kubeadm init --apiserver-advertise-address={{ ansible_host }} --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all
      register: k8s_init_output
      ignore_errors: yes

    - name: Ensure bind address is set for kube-apiserver
      lineinfile:
        path: /etc/kubernetes/manifests/kube-apiserver.yaml
        regexp: '^\s*-\s*--bind-address='
        line: '    - --bind-address=0.0.0.0'
        create: yes
        backrefs: yes
    
    - name: Comment out the 'disabled_plugins = ["cri"]' line
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^disabled_plugins = \["cri"\]'
        line: '#disabled_plugins = ["cri"]'

    - name: Allow master node to schedule workloads
      shell: kubectl taint nodes --all node-role.kubernetes.io/control-plane- node-role.kubernetes.io/master-
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      notify:
        - Restart containerd

  handlers:
    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
    
    - name: Restart kubeapi-server
      ansible.builtin.systemd:
        name: containerd
        state: restarted
